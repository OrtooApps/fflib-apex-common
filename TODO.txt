TODO:
	* Document TestDateTimeUtils and how to set now and today
	* Consider a superclass for OrgCache and SessionCache?

* Move all the Jest LWc tests over to create the component in the before

Look at the use of 'MockDatabase' in fflib

* LWCs
    * Standards for:
        * Filter and Results Page
            * Apex format
                * Inner Class for the search parameters
                * Offset
                * Order By - single column
                * Order By Direction

        * Edit Forms / Validation
        * Edit Forms with Child Records

Add to documentation
    * Query builder - add it to the architectural diagram - after more investigation

    DmlServices documentation:
        * Show how to tie the validator into an action
        * Note that the actions should
        * Actions can reference Validators
        * Cannot reference SOQL - they are excuted in a loop
        * Do not do domain logic in them

    * Using the Mock Registrar


From Utilities, things that may be useful:
    * getReferenceObjectAPIName
    * getObjName - get the object name from an Id
    * getLabel / getObjectLabel - get the label for an sobject
    * getFieldLabel
    * delimitedStringToSet and reverse
        * escaping single quotes - in both directions?
    * unitsBetweenDateTime
    * emailAddressIsValid / emailAddressListIsValid
    * sObjectIsCustom / sObjectIsCustomfromAPIName
    * IsfieldFilterable
    * isFieldCustom
    * idIsValid
    * getCrossObjectAPIName
    * objectFieldExist
    * sortSelectOptions - complete re-write

Write tests for the SOQL generation in the criteria library

Amoss_Asserts.assertContains improvement into the OS lib
New Amoss_Asserts into the OS Lib

Bring in Stack from Q-assign?
Review Utilities in q-assign - is anything else useful?

* Document a few of the oddities on the Assignment Group and Action that need to be resolved.

Bad Smells - strung out calls to describe methods - put them into SobjectUtils

* Criteria extension
    * Build a simple SearchFilter SOQL generator / Selector

* Question: How do we generically tie in the QueryHandler?  Should we?  How often is this currently used?

* Question: How do we handle Constants - where are they defined?

* Question: Multiple Apps...  maybe

* Question: Can we generate a class diagram from a body of code
* Question: All or nothing on fflib

* Question: Do you need Heap size management rules -

* Produce test-case for lack of clickthrough and raise bug on VSCode

* How do we handle constants?

Notes:
* Services should always be designed by seniors - at least which services exist